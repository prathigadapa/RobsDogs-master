@model Ui.Models.DogOwnerListViewModel

<h1>Rob's dogs</h1>

<h2>Introduction</h2>

<p>When this system was built, Rob had one dog. Recently Rob's wife has insisted they get more dogs. As a result, this system needs updating to accommodate the new additions to their family. </p>

<p>Rob's first dog is named Willow, he now has two additional dogs named "Nook" and "Sox". </p>

<p>Please improve this system to display the name of all three of Rob's dogs in the dog names column in the table below. Please consider:
	<ul>
		<li>Any need for new entities</li>
		<li>Relationships between entities</li>
		<li>SOLID principles</li>
		<li>TDD</li>
	</ul>
</p>

<p>You do not need to interact with a database, feel free to edit the data returned in the file named "Ui\Data\DogOwnerRepository.cs", changing the entity structure as required. </p>
<p>StructureMap is installed and configured to use default conventions (drop the I) and scan all assemblies so you will not have to configure any DI container.</p>
<p>Moq is installed into Ui.Tests to allow you to develop the unit testing in the Ui, feel free to add Moq anywhere else you see fit.</p>

<table class="table">
	<thead>
	<tr>
		<th>Dog owner name</th>
		<th>Dog names</th>
	</tr>
	</thead>
	<tbody>
	@foreach (var dogOwner in Model.DogOwnerViewModels)
	{
		<tr>
			<td>@dogOwner.OwnerName</td>
			<td>@String.Join(",", @dogOwner.DogNames)</td>
		</tr>
	}
	</tbody>
</table>